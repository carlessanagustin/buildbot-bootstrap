# -*- python -*-
# ex: set syntax=python:

# This is the dictionary that the buildmaster pays attention to. 
# It uses this dictionary to workout what its going to do.

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.

# 'protocols' contains information about protocols which master will use for
# communicating with slaves.
# You must define at least 'port' option that slaves could connect to your master
# with this protocol.
# 'port' must match the value configured into the buildslaves (with their
# --master option)

####### DB URL
# This specifies what database buildbot uses to store its state.  You can leave
# this at its default for all but the largest installations.

from .config import builders, changesource, schedulers, slaves, status

# GLOBAL
title_name = 'MyProject Buildbot'
title_url = 'http://www.myproject.com'
slave_port = 9989
working_dir = '/opt/myproject/git'
users = [('myusername', 'mypassword')]
repo_url ='git@............git'
branch_name = 'master'

build_names = []

# future usage: build_names.append(dict(name='', branch='', slaves=[], scheduler=[]))

build_names.append(dict(name='Master', branch='master', slaves=['myslave']))
build_names.append(dict(name='Sprint-20', branch='sprint-20', slaves=['myslave']))

BuildmasterConfig = {
	'title': title_name,
	'titleURL': title_url,
    'buildbotURL': 'http://localhost:8010/',
    'db_url': 'sqlite:///state.sqlite',
	'protocols': {'pb': {'port': slave_port}},
    'builders': builders.get_builders(build_names, working_dir, repo_url),
    'change_source': changesource.get_source(repo_url, branch_name),
    'schedulers': schedulers.get_schedulers(build_names),
    'slaves': slaves.get_slaves(),
    'status': status.get_status(users),
}
